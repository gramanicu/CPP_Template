#!/usr/bin/env bash
# Â© 2020 Grama Nicolae

wget -q --spider http://google.com
if [ $? -eq 0 ]; then
    sudo wget -N -q --no-check-certificate --content-disposition https://raw.githubusercontent.com/gramanicu/CPP_Template/master/c%2B%2Bproj -O /usr/local/bin/c++proj
    sudo chmod +x /usr/local/bin/c++proj
fi


if [ "$#" -eq 0 ]; then
    SNAME="${PWD##*/}.cpp"  # source name
    ENAME="${PWD##*/}"  # executable name
    ANAME="${PWD##*/}.zip"  # archive name
fi

if [ "$#" -eq 1 ]; then
    SNAME="${1%.*}.cpp"  # source name
    ENAME="${1%.*}"  # executable name
    ANAME="${PWD##*/}.zip"  # archive name
fi

if [ "$#" -eq 2 ]; then
    SNAME="${1%.*}.cpp"  # source name
    ENAME="${2%.*}"  # executable name
    ANAME="${1%.*}.zip"  # archive name
fi

if [ "$#" -ge 3 ]; then
    SNAME="${1%.*}.cpp"  # source name
    ENAME="${2%.*}"  # executable name
    ANAME="${3%.*}.zip"  # archive name
fi

echo $SNAME
echo $ENAME
echo $ANAME

cat > Makefile << EOF
# Copyright 2020 Grama Nicolae

.PHONY: gitignore clean memory beauty run
.SILENT: beauty clean memory gitignore

# Compilation variables
CC = g++
CFLAGS = -Wno-unused-parameter -Wall -Wextra -pedantic -g -O3 -std=c++17
EXE = $ENAME
SRC = \$(wildcard */*.cpp)
OBJ = \$(SRC:.cpp=.o)

# Compiles the program
build: \$(OBJ)
	\$(info Compiling code...)
	@\$(CC) -o \$(EXE) \$^ \$(CFLAGS) ||:
	\$(info Compilation successfull)
	-@rm -f *.o ||:
	@\$(MAKE) -s gitignore ||:

%.o: %.cpp
	\$(CC) -o \$@ -c \$< \$(CFLAGS) 

# Executes the binary
run: clean build
	./\$(EXE)

# Deletes the binary and object files
clean:
	rm -f \$(EXE) \$(OBJ) $ANAME
	echo "Deleted the binary and object files"

# Automatic coding style, in my personal style
beauty:
	clang-format -i -style=file */*.cpp
	clang-format -i -style=file */*.hpp

# Checks the memory for leaks
MFLAGS = --leak-check=full --show-leak-kinds=all --track-origins=yes
memory:clean build
	valgrind \$(MFLAGS) ./\$(EXE)

# Adds and updates gitignore rules
gitignore:
	@echo "\$(EXE)" > .gitignore ||:
	@echo "src/*.o" >> .gitignore ||:
	@echo ".vscode*" >> .gitignore ||:	
	echo "Updated .gitignore"
	
# Creates an archive of the project
pack: clean
	zip -FSr $ANAME *

EOF


cat > .clang-format << EOF
---
Language:        Cpp
BasedOnStyle:  Google
AccessModifierOffset: -1
AlignOperands:   true
ColumnLimit:     80
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
IndentWidth:     4
IndentWrappedFunctionNames: false
ReflowComments:  true
SortIncludes:    true
SortUsingDeclarations: true
TabWidth:        8
UseTab:          Never
...
EOF

if [ ! -d "./src/" ]; then
  mkdir src 
fi

if [ ! -f "./src/${SNAME}" ]; then
cat > src/${SNAME} << EOF
#include <iostream>

int main() {
    
    return 0;
}

EOF

fi

